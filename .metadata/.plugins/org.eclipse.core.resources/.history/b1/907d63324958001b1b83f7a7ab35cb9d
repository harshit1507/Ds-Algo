package stack;
import java.util.*;
import java.io.*;
public class test {

	static String path(String s)
    {
      Stack<String> st = new Stack<>();
      String res = "";
      
      res += "/";
      int len = s.length();
      for(int i=0;i<len;i++)
      {
        String dir = "";
        
        while(i<len && s.charAt(i) == '/')
          i++;
          
        while(i<len && s.charAt(i) != '/')
        {
          dir += s.charAt(i);
          i++;
        }
        
        if(dir.equals("..") == true)
        {
          if(!st.empty())
            st.pop();
        }
        else if(dir.equals(".") == true)
          continue;
        else if(dir.length() != 0)
          st.push(dir);
      }
      
      Stack<String> st1 = new Stack<>();
      while(!st.empty())
      {
        st1.push(st.pop());
      }
      
      while(!st1.empty())
      {
        if(st1.size() != 1)
          res += (st.pop() + "/");
        else
          res += st1.pop();
      }
      return res;
    }
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner sc = new Scanner(System.in);
	      int t = sc.nextInt();
	      while(t-->0)
	      {
	        int n = sc.nextInt();
	        int a[] = new int[n];
	        for(int i=0;i<n;i++)
	          a[i] = sc.nextInt();
	          
	        Stack<Integer> st = new Stack<>();
	        
	        while(!st.empty())
	          st.pop();
	        st.push(a[1]);
	        int ans = 0;
	        for(int i=2;i<=n;i++)
	        {
	          while(!st.empty() && st.peek()<a[i])
	          {
	            ans = Math.max(ans,st.peek() ^ a[i]);
	            st.pop();
	          }
	          if(!st.empty())
	            ans = Math.max(ans,st.peek() ^ a[i]);
	          st.push(a[i]);
	        }
	        System.out.println(ans);
	      }
	}

}
